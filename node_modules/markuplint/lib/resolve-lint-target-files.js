"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveLintTargetFiles = void 0;
const file_resolver_1 = require("@markuplint/file-resolver");
async function resolveLintTargetFiles(options) {
    // Resolve files
    const files = [];
    if (options.files) {
        const filePathes = Array.isArray(options.files) ? options.files : [options.files];
        for (const filePath of filePathes) {
            files.push(...(await file_resolver_1.getFiles(filePath)));
            if (!files.length) {
                throw new Error(`"${options.files}" is not found.`);
            }
        }
    }
    else if (options.sourceCodes) {
        const codes = Array.isArray(options.sourceCodes) ? options.sourceCodes : [options.sourceCodes];
        const names = Array.isArray(options.names) ? options.names : options.names ? [options.names] : [];
        files.push(...codes.map((code, i) => file_resolver_1.getAnonymousFile(code, options.workspace, names[i])));
    }
    return files;
}
exports.resolveLintTargetFiles = resolveLintTargetFiles;
