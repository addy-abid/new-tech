import { MLASTHTMLAttr, MLToken } from '@markuplint/ml-ast';
import MLDOMToken from './token';
export default class MLDOMAttribute extends MLDOMToken<MLASTHTMLAttr> {
    readonly attrType = "html-attr";
    readonly name: MLDOMToken<MLToken>;
    readonly spacesBeforeName: MLDOMToken<MLToken>;
    readonly spacesBeforeEqual: MLDOMToken<MLToken>;
    readonly equal: MLDOMToken<MLToken>;
    readonly spacesAfterEqual: MLDOMToken<MLToken>;
    readonly startQuote: MLDOMToken<MLToken>;
    readonly value: MLDOMToken<MLToken>;
    readonly endQuote: MLDOMToken<MLToken>;
    readonly isDynamicValue?: true;
    readonly isDirective?: true;
    readonly potentialName: string;
    readonly isInvalid?: boolean;
    readonly candidate?: string;
    readonly isDuplicatable: boolean;
    constructor(astToken: MLASTHTMLAttr);
    get raw(): string;
    get startOffset(): number;
    get endOffset(): number;
    get startLine(): number;
    get endLine(): number;
    get startCol(): number;
    get endCol(): number;
    getName(): {
        line: number;
        col: number;
        potential: string;
        raw: string;
    };
    getValue(): {
        line: number;
        col: number;
        potential: string;
        raw: string;
    };
    toString(withSpace?: boolean): string;
}
