"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const indentation_1 = tslib_1.__importDefault(require("./indentation"));
const node_1 = tslib_1.__importDefault(require("./node"));
/**
 * Raw text elements
 *
 * @see https://html.spec.whatwg.org/multipage/syntax.html#raw-text-elements
 */
const rawTextElements = ['script', 'style'];
class MLDOMText extends node_1.default {
    constructor(astNode, document) {
        super(astNode, document);
        this.type = 'Text';
        this.ownModels = new Set();
        this.isRawText = this.parentNode ? rawTextElements.includes(this.parentNode.nodeName.toLowerCase()) : false;
    }
    isWhitespace() {
        return /^\s+$/.test(this.raw);
    }
    /**
     * @override
     */
    get indentation() {
        if (this.isRawText) {
            return null;
        }
        const matched = this.raw.match(/^(\s*(?:\r?\n)+\s*)(?:[^\s]+)/);
        if (matched) {
            const spaces = matched[1];
            if (spaces) {
                const spaceLines = spaces.split(/\r?\n/);
                const line = spaceLines.length + this.startLine - 1;
                const lastSpace = spaceLines.pop();
                if (lastSpace != null) {
                    return new indentation_1.default(this, lastSpace, line, this);
                }
            }
        }
        return null;
    }
}
exports.default = MLDOMText;
