import { AnonymousNode, IMLDOMOmittedElement } from '../types';
import Document from '../document';
import { MLASTOmittedElement } from '@markuplint/ml-ast';
import MLDOMElement from './element';
import MLDOMNode from './node';
import MLDOMText from './text';
import { RuleConfigValue } from '@markuplint/ml-config';
export default class MLDOMOmittedElement<T extends RuleConfigValue, O = null> extends MLDOMNode<T, O, MLASTOmittedElement> implements IMLDOMOmittedElement {
    readonly type = "OmittedElement";
    readonly nodeName: string;
    readonly namespaceURI: string;
    readonly isForeignElement: boolean;
    obsolete: boolean;
    constructor(astNode: MLASTOmittedElement, document: Document<T, O>);
    get childNodes(): AnonymousNode<T, O>[];
    getChildElementsAndTextNodeWithoutWhitespaces(): (MLDOMElement<T, O> | MLDOMText<T, O>)[];
}
