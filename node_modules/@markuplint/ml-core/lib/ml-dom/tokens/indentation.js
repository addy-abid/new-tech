"use strict";
var _MLDOMIndentation_fixed;
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
class MLDOMIndentation {
    constructor(originTextNode, raw, line, parentNode) {
        // readonly #originRaw: string;
        _MLDOMIndentation_fixed.set(this, void 0);
        this.node = originTextNode;
        this.parent = parentNode;
        this.line = line;
        // this.#originRaw = raw;
        tslib_1.__classPrivateFieldSet(this, _MLDOMIndentation_fixed, raw, "f");
    }
    get type() {
        if (this.parent.type !== 'Text' && this.line !== this.node.endLine) {
            return 'none';
        }
        const raw = tslib_1.__classPrivateFieldGet(this, _MLDOMIndentation_fixed, "f");
        return raw === '' ? 'none' : /^\t+$/.test(raw) ? 'tab' : /^[^\t]+$/.test(raw) ? 'space' : 'mixed';
    }
    get width() {
        if (this.parent.type !== 'Text' && this.line !== this.node.endLine) {
            return 0;
        }
        return tslib_1.__classPrivateFieldGet(this, _MLDOMIndentation_fixed, "f").length;
    }
    get raw() {
        if (this.parent.type !== 'Text' && this.line !== this.node.endLine) {
            return '';
        }
        return tslib_1.__classPrivateFieldGet(this, _MLDOMIndentation_fixed, "f");
    }
    fix(raw) {
        const current = tslib_1.__classPrivateFieldGet(this, _MLDOMIndentation_fixed, "f");
        tslib_1.__classPrivateFieldSet(this, _MLDOMIndentation_fixed, raw, "f");
        if (this.node) {
            const node = this.node;
            const line = node.startLine;
            const lines = node.raw.split(/\r?\n/);
            const index = this.line - line;
            if (lines[index] != null) {
                lines[index] = lines[index].replace(current, tslib_1.__classPrivateFieldGet(this, _MLDOMIndentation_fixed, "f"));
            }
            // console.log({ori: this._originRaw, raw, line, lines, index});
            node.fix(lines.join('\n'));
        }
    }
}
exports.default = MLDOMIndentation;
_MLDOMIndentation_fixed = new WeakMap();
