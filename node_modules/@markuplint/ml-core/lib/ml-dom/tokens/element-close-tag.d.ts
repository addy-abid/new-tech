import Document from '../document';
import { IMLDOMElementCloseTag } from '../types';
import { MLASTElementCloseTag } from '@markuplint/ml-ast';
import MLDOMElement from './element';
import MLDOMNode from './node';
import { RuleConfigValue } from '@markuplint/ml-config';
export default class MLDOMElementCloseTag<T extends RuleConfigValue, O = null> extends MLDOMNode<T, O, MLASTElementCloseTag> implements IMLDOMElementCloseTag {
    #private;
    readonly type = "ElementCloseTag";
    readonly nodeName: string;
    readonly startTag: MLDOMElement<T, O>;
    readonly isForeignElement: boolean;
    readonly isCustomElement: boolean;
    constructor(astNode: MLASTElementCloseTag, document: Document<T, O>, startTag: MLDOMElement<T, O>);
    get raw(): string;
    get rule(): import("@markuplint/ml-config").RuleInfo<T, O>;
    fixNodeName(name: string): void;
    getNameLocation(): {
        offset: number;
        line: number;
        col: number;
    };
}
