"use strict";
var _MLCore_parser, _MLCore_sourceCode, _MLCore_ast, _MLCore_document, _MLCore_ruleset, _MLCore_i18n, _MLCore_rules, _MLCore_schemas, _MLCore_ignoreFrontMatter, _MLCore_filename;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MLCore = void 0;
const tslib_1 = require("tslib");
const ml_dom_1 = require("./ml-dom");
class MLCore {
    constructor(parser, sourceCode, ruleset, rules, i18n, schemas, parserOptions, filename) {
        _MLCore_parser.set(this, void 0);
        _MLCore_sourceCode.set(this, void 0);
        _MLCore_ast.set(this, void 0);
        _MLCore_document.set(this, void 0);
        _MLCore_ruleset.set(this, void 0);
        _MLCore_i18n.set(this, void 0);
        _MLCore_rules.set(this, void 0);
        _MLCore_schemas.set(this, void 0);
        _MLCore_ignoreFrontMatter.set(this, void 0);
        _MLCore_filename.set(this, void 0);
        tslib_1.__classPrivateFieldSet(this, _MLCore_parser, parser, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_sourceCode, sourceCode, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_ignoreFrontMatter, !!parserOptions.ignoreFrontMatter, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_ruleset, {
            rules: ruleset.rules || {},
            nodeRules: ruleset.nodeRules || [],
            childNodeRules: ruleset.childNodeRules || [],
        }, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_i18n, i18n, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_schemas, schemas, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_ast, tslib_1.__classPrivateFieldGet(this, _MLCore_parser, "f").parse(tslib_1.__classPrivateFieldGet(this, _MLCore_sourceCode, "f"), 0, 0, 0, tslib_1.__classPrivateFieldGet(this, _MLCore_ignoreFrontMatter, "f")), "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_filename, filename, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_document, new ml_dom_1.Document(tslib_1.__classPrivateFieldGet(this, _MLCore_ast, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_ruleset, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_schemas, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_filename, "f")), "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_rules, rules, "f");
    }
    get document() {
        return tslib_1.__classPrivateFieldGet(this, _MLCore_document, "f");
    }
    async verify(fix = false) {
        const reports = [];
        for (const rule of tslib_1.__classPrivateFieldGet(this, _MLCore_rules, "f")) {
            const ruleInfo = rule.optimizeOption(tslib_1.__classPrivateFieldGet(this, _MLCore_ruleset, "f").rules[rule.name] || false);
            if (ruleInfo.disabled) {
                continue;
            }
            if (fix) {
                await rule.fix(tslib_1.__classPrivateFieldGet(this, _MLCore_document, "f"), ruleInfo);
            }
            const results = await rule.verify(tslib_1.__classPrivateFieldGet(this, _MLCore_document, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_i18n, "f"), ruleInfo);
            reports.push(...results);
        }
        return reports;
    }
    setParser(parser, parserOptions) {
        var _a;
        tslib_1.__classPrivateFieldSet(this, _MLCore_parser, parser, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_ignoreFrontMatter, (_a = parserOptions.ignoreFrontMatter) !== null && _a !== void 0 ? _a : tslib_1.__classPrivateFieldGet(this, _MLCore_ignoreFrontMatter, "f"), "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_ast, tslib_1.__classPrivateFieldGet(this, _MLCore_parser, "f").parse(tslib_1.__classPrivateFieldGet(this, _MLCore_sourceCode, "f"), 0, 0, 0, tslib_1.__classPrivateFieldGet(this, _MLCore_ignoreFrontMatter, "f")), "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_document, new ml_dom_1.Document(tslib_1.__classPrivateFieldGet(this, _MLCore_ast, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_ruleset, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_schemas, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_filename, "f")), "f");
    }
    setCode(sourceCode) {
        tslib_1.__classPrivateFieldSet(this, _MLCore_sourceCode, sourceCode, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_ast, tslib_1.__classPrivateFieldGet(this, _MLCore_parser, "f").parse(tslib_1.__classPrivateFieldGet(this, _MLCore_sourceCode, "f"), 0, 0, 0, tslib_1.__classPrivateFieldGet(this, _MLCore_ignoreFrontMatter, "f")), "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_document, new ml_dom_1.Document(tslib_1.__classPrivateFieldGet(this, _MLCore_ast, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_ruleset, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_schemas, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_filename, "f")), "f");
    }
    setRuleset(ruleset, schemas) {
        tslib_1.__classPrivateFieldSet(this, _MLCore_ruleset, ruleset, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_schemas, schemas, "f");
        tslib_1.__classPrivateFieldSet(this, _MLCore_document, new ml_dom_1.Document(tslib_1.__classPrivateFieldGet(this, _MLCore_ast, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_ruleset, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_schemas, "f"), tslib_1.__classPrivateFieldGet(this, _MLCore_filename, "f")), "f");
    }
}
exports.MLCore = MLCore;
_MLCore_parser = new WeakMap(), _MLCore_sourceCode = new WeakMap(), _MLCore_ast = new WeakMap(), _MLCore_document = new WeakMap(), _MLCore_ruleset = new WeakMap(), _MLCore_i18n = new WeakMap(), _MLCore_rules = new WeakMap(), _MLCore_schemas = new WeakMap(), _MLCore_ignoreFrontMatter = new WeakMap(), _MLCore_filename = new WeakMap();
