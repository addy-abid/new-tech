import { ExtendedSpec, MLMLSpec } from '@markuplint/ml-spec';
import { MLMarkupLanguageParser } from '@markuplint/ml-ast';
import { ParserOptions, RuleConfigValue, VerifiedResult } from '@markuplint/ml-config';
import { Document } from './ml-dom';
import { I18n } from '@markuplint/i18n';
import { MLRule } from './ml-rule';
import Ruleset from './ruleset';
export declare class MLCore {
    #private;
    constructor(parser: MLMarkupLanguageParser, sourceCode: string, ruleset: Partial<Ruleset>, rules: MLRule<RuleConfigValue, unknown>[], i18n: I18n, schemas: Readonly<[MLMLSpec, ...ExtendedSpec[]]>, parserOptions: ParserOptions, filename: string);
    get document(): Document<RuleConfigValue, unknown>;
    verify(fix?: boolean): Promise<VerifiedResult[]>;
    setParser(parser: MLMarkupLanguageParser, parserOptions: ParserOptions): void;
    setCode(sourceCode: string): void;
    setRuleset(ruleset: Ruleset, schemas: [MLMLSpec, ...ExtendedSpec[]]): void;
}
