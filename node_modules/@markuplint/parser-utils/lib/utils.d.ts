import { MLASTAttr, MLASTNode, MLToken, Walker } from '@markuplint/ml-ast';
export declare function uuid(): string;
/**
 *
 * @deprecated
 * @param raw
 * @param startLine
 * @param startCol
 * @param startOffset
 * @returns
 */
export declare function tokenizer(raw: string | null, startLine: number, startCol: number, startOffset: number): MLToken;
export declare function tokenizer_v2(raw: string | null, startOffset: number, rawCode: string): MLToken;
export declare function sliceFragment(rawHtml: string, start: number, end: number): {
    startOffset: number;
    endOffset: number;
    startLine: number;
    endLine: number;
    startCol: number;
    endCol: number;
    raw: string;
};
export declare function getLine(html: string, startOffset: number): number;
export declare function getCol(html: string, startOffset: number): number;
export declare function getEndLine(html: string, line: number): number;
export declare function getEndCol(html: string, col: number): number;
export declare function walk(nodeList: MLASTNode[], walker: Walker, depth?: number): void;
export declare function nodeListToDebugMaps(nodeList: MLASTNode[], withAttr?: boolean): string[];
export declare function attributesToDebugMaps(attributes: MLASTAttr[]): string[][];
export declare function siblingsCorrection(nodeList: MLASTNode[]): void;
/**
 * valid name of custom element
 *
 * @see https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name
 *
 * > - name must match the [PotentialCustomElementName](https://html.spec.whatwg.org/multipage/custom-elements.html#prod-potentialcustomelementname) production
 * > - name must not be any of the following:
 * >   - annotation-xml
 * >   - color-profile
 * >   - font-face
 * >   - font-face-src
 * >   - font-face-uri
 * >   - font-face-format
 * >   - font-face-name
 * >   - missing-glyph
 *
 * ASCII-case-insensitively.
 * Originally, it is not possible to define a name including ASCII upper alphas in the custom element, but it is not treated as illegal by the HTML parser.
 *
 * @param tagName
 */
export declare function isPotentialCustomElementName(tagName: string): boolean;
