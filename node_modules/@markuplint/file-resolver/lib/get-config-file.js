"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConfigFile = void 0;
const optimize_path_1 = require("./optimize-path");
const helper_1 = require("./helper");
/**
 * Asynchronously get configuration file.
 *
 * @param filePath A path of configuration file.
 * @param config Configure data.
 * @param recursiveExtends Recursive load by extends options.
 * @param cacheClear Clear cache when loading.
 */
async function getConfigFile(filePath, config, recursiveExtends = true, cacheClear = false) {
    let files = new Set([filePath]);
    const errs = [];
    if (config.excludeFiles) {
        config.excludeFiles = config.excludeFiles.map(globPath => optimize_path_1.optimizePath(filePath, globPath));
    }
    if (recursiveExtends) {
        const extendsResult = await helper_1.recursiveLoad(config, filePath, files, cacheClear);
        files = extendsResult.files;
        config = extendsResult.config;
        errs.push(...extendsResult.errs);
    }
    return {
        files,
        config,
        errs,
    };
}
exports.getConfigFile = getConfigFile;
